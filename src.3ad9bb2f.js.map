{"version":3,"sources":["js/form.js","index.js"],"names":["isEmailInputsValid","input","value","match","isTelInputValid","console","log","isValidInput","length","hasAttribute","typeInput","getAttribute","validateForm","form","inputs","querySelectorAll","addEventListener","event","map","parentElement","classList","remove","validationResult","add","every","result","preventDefault","document","querySelector"],"mappings":";AAwCO,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAxCP,IAAMA,EAAqB,SAACC,GAGvBA,QAAAA,EAAMC,MAAMC,MAFI,uBASfC,EAAkB,SAACH,GACvBI,QAAQC,IAAI,oBAGTL,QAAAA,EAAMC,MAAMC,MAFI,oFASfI,EAAe,SAACN,GAChBA,GAAuB,IAAvBA,EAAMC,MAAMM,QAAgBP,EAAMQ,aAAa,YAC1C,OAAA,EAKFC,OAFWT,EAAMU,aAAa,SAG9B,IAAA,QACIX,OAAAA,EAAmBC,GAEvB,IAAA,MACIG,OAAAA,EAAgBH,GAEzB,QACS,OAAA,IAIAW,EAAe,SAACC,GACrBC,IAAAA,EAAaD,EAAAA,EAAKE,iBAAiB,kBAEzCF,EAAKG,iBAAiB,SAAU,SAACC,GACNH,EAAOI,IAAI,SAAAjB,GAClCA,EAAMkB,cAAcC,UAAUC,OAAO,gBAAiB,iBAEhDC,IAAAA,EAAmBf,EAAaN,GAQ/BqB,OANHA,EACFrB,EAAMkB,cAAcC,UAAUG,IAAI,iBAElCtB,EAAMkB,cAAcC,UAAUG,IAAI,iBAG7BD,IAGaE,MAAM,SAAAC,GAAUA,OAAW,IAAXA,KACpCR,EAAMS,oBAnBL,QAAA,aAAA;;ACpCP,aAJA,IAAA,EAAA,QAAA,aAEMb,EAAOc,SAASC,cAAc,UAEpC,EAAaf,EAAAA,cAAAA","file":"src.3ad9bb2f.js","sourceRoot":"..\\src","sourcesContent":["const isEmailInputsValid = (input) => {\r\n  const emailRules = /^[^.@]+.*@.*[^.@]$/\r\n\r\n  if(input.value.match(emailRules)) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nconst isTelInputValid = (input) => {\r\n  console.log('start tel valid.')\r\n  const phoneRules = /^\\+?([0-9]{3})[-. ]?([0-9]{2})[-. ]?([0-9]{3})[-. ]?([0-9]{2})[-. ]?([0-9]{2})$/\r\n\r\n  if(input.value.match(phoneRules)) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nconst isValidInput = (input) => {\r\n  if (input.value.length === 0 && input.hasAttribute('required')) {\r\n    return false\r\n  }\r\n\r\n  const typeInput = input.getAttribute('type')\r\n\r\n  switch(typeInput) {\r\n    case 'email':\r\n      return isEmailInputsValid(input)\r\n\r\n    case 'tel':\r\n      return isTelInputValid(input)\r\n    \r\n    default:\r\n      return true\r\n  }\r\n}\r\n\r\nexport const validateForm = (form) => {\r\n  const inputs = [...form.querySelectorAll('.field__input')]\r\n\r\n  form.addEventListener('submit', (event) => {\r\n    const validationResult = inputs.map(input => {\r\n      input.parentElement.classList.remove('field_success', 'field_invalid')\r\n\r\n      const validationResult = isValidInput(input)\r\n  \r\n      if (validationResult) {\r\n        input.parentElement.classList.add('field_success')\r\n      } else {\r\n        input.parentElement.classList.add('field_invalid')\r\n      }\r\n\r\n      return validationResult\r\n    })\r\n\r\n    if (!validationResult.every(result => result === true)) {\r\n      event.preventDefault()\r\n    }\r\n  })\r\n}","import { validateForm } from \"./js/form\"\r\n\r\nconst form = document.querySelector('.form')\r\n\r\nvalidateForm(form)"]}